** 解魔方机器人项目日志 **

项目名称: 解魔方机器人
项目作者: 屠文博
起始日期: 2022年11月4日

==========================

2022-11-10-16:57 ->
	重构, 马德之前写的给弄丢了, 没备份好, 现在写着贼烦.
	昨天晚上以为都写好了, 就剩下查bug了, 结果今天早上一来就发现, 写的不行, 还得特么重新写.
	得换一个方法. 换成实时识别的, 他识别对了, 用户在手动给出指令让识别下一个面.
	这样好调试啊! 唉...无奈

	
2022-11-14-20:49 ->
	马的, 今天晚上本来想加一个调试宏TU_INFO的, 鬼知道为啥,它给我报一大堆莫名其妙的错误.
	艹!


2022-11-15-11:42 ->
	今天上午找bug找了一上午, 终于把那个segmentfault的bug给找出来了, 挺开心, 一上午没白忙!
	但是现在颜色还是识别不对啊! 应该后面还有类似的Bug, 得一点一点的调了啊!
	唉...真操蛋...


2022-11-15-19:07 ->
	又打算重构了!!!
	之前的方法, 直接在代码中把各个颜色的h, s, v值写死了, 有点不好, 感觉h这个值从0~180分的等级有点少了, 
	容易识别错误, 对于用手调来说很好用, 但是这种算法里自动识别的,不是那么好用.
	所以接下来我想把手动调节, 获得各个颜色的hsv值得程序给加进去, 这样只要愿意调, 颜色总能识别正确的, 
	就不会存在识别错误的情况了, 也不用像前几代那样还要补光啥的.
	为了后续的扩展性, 也为了练习一下我刚学的进程间通信, 多线程的知识, 我想用一下多进程和多线程!
	总体结构就是: 启动之后就先启动另一个进程让用户调节, 获取各种颜色的hsv值, 至于把调节到的hsv值, 
	则通过进程间通信的方式传回来.


2022-11-20-11:35 ->
	又打算重构了!!!
	用上一种方法, 本来以为效果会挺好的, 但实际做出来, 发现那写轮廓要找起来还是挺麻烦的, 杂点太多了.
	昨天我问了一下李勋老师, 他给了我一点建议. 我打算用RGB试试了, 之前一直在HSV下做的, 效果一直不咋好, 
	RGB里还一直没试过.
	我打算不再弄什么采样区域边长了, 直接计算整个面的平均值, 也先不设置步长, 先看看速度咋样吧.
	这样整个求平均值, 那其实就跟人眼看起来是一样的了, 既然人眼能识别出来颜色, 那按道理来说, 机器也肯定能识别出来!
	要在RGB色彩空间下计算一下颜色之间的距离.
	唉...一遍又一遍地重写, 人都给我写麻了...


2023-1-8-16:29 ->
	诶...耽误了一段时间, 闲言少叙, 开始干吧!
	哦对! 我这是没有用vim, 用了vscode里的ssh插件, 用vscode写代码舒服一点.


2023-1-8-17:08 ->
	得一步一步的弄了, 要想判定颜色, 我得先知道每种颜色的bgr值分别是多少啊!
	所以我得先完成debug下的任务. 然后再往下做.


2023-1-9-16:57 ->
	今天该了好多东西, 还挺有收获嘞!
	把计算一个方块的bgr的平均值的函数给调试好了!
	而且发现一个可好的调试方法, 就是你不知道参与计算的坐标对不对的话, 那就把
	那些坐标的点都设成黑色, 看是不是在你期望的位置就可以了!


2023-1-10-11:24 ->
	识别颜色终于算是弄好了! 艹!
	其实特么的也没有多难, 甚至可以说是简单. 但是之前就是一直没有弄出来...唉...
	我也没想到这种方法能这么好用, 识别正确率还挺高的!
	我还发现一个有意思的现象, 就是这种RGB色彩空间下, 识别颜色你在比较亮的环境中, 
	识别正确率挺高的, 但是在那种比较暗的环境中, 就很容易识别错. 
	所以后期继续做得话, 还是得补光!
	这应该也能推断出RGB色彩空间中, 各种颜色在3维空间中的分布情况!

	唉! 感触最深的就是: 我没想到这种方法的效果会这么好...
	之前一直在HSV上吃瘪...


2023-1-10-17:14 ->
	Makefile写的不是很会, 感觉应该没问题的, 它老是报错说头文件找不到...
	没办法, 今天下午我改用了CMake, 感觉也挺好用的.


2023-1-10-21:21 ->
	今天晚上把那些小细节都给该了该.
	想加读写文件那一部分嘞, 但是不知道为啥, 读写的时候总是不对, 真奇怪.
	以二进制方式读写方便一点.


2023-1-11-10:25 ->
	哎呀昨天晚上的那个bug找到了, 原来是我在打开文件的时候没有加权限...
	唉, 反正还是特么用的不熟...
	草了


2023-1-11-13:38 ->
	终于差不多了!
	图像识别部分已基本完工!
	瞌睡死了...


2023-1-18-19:51 ->
	前几天在弄网络那一部分, 也学了点, 在Ubuntu上也测试了, 也可以通信, 但是在树莓派跟
	电脑之间就是不行. 所以最后实在没办法, 就在电脑上用Qt写了个串口通信的东西, 来中继了
	一下. 这里还要感谢一下吴老板帮忙!
	这个做法实在是无奈之举, 网络部分我技术栈没有涉及到. 后续学弟可以把这一部分改进一下.


2023-1-19-15:01 ->
	把获取魔方解法的部分添加上吧!


2023-1-19-21:13 ->
	再做一次稍大的修改吧!
	之前的识别frame, 显示识别结果的部分, 这里用了一个index参数进行同步.
	但是仔细想想, 这个参数就很无脑, 你看函数说明的话就很难猜到这个参数是什么意思, 一点
	都不自然!
	而且这两个函数里面, 第一个进行识别, 识别一次就把识别结果写进去一次, 这很不应该, 肯定
	会降低效率!(确实, 没有进行识别的时候, 帧率在30fps~31fps, 进行识别之后就降到了28fps~
	28fps) 这种做法很傻啊! 应该是用户确认识别结果正确了, 再往里写, 而不应该每识别一次
	都写!
	所以我想改成: 取消index参数, 当用户手动确认识别正确之后, 再把结果写进去! 看看这次
	帧率会不会高一点点吧, 哈哈哈哈就算高也高不一点.


2023-1-20-1:01 ->
	终于弄好啦!!!
	颜色识别, 生成色块信息字符串, 获取解法, 都已经完成啦!!!
	真特么开心!!!
	弄了一晚上, 今晚都没陪郑郑聊天, 好想她!
	还是晚上比较有灵感, 今天白天坐在这就是写不出来, 烦死了!
	唉, 都凌晨了, 该碎觉了...
	大框架应该不会再改了, 只剩下一些细节上再优化优化了!