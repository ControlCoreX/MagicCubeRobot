##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.11.2] date: [Fri Dec 23 23:42:00 CST 2022]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = project-template


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
user/main.c \
user/user_task.c \
user/status_led_task.c \
user/test_task.c \
user/cmd_proc_task.c \
user/data_proc_task.c \
user/limit_task.c \
software/tucomm/usart2.c \
software/tucomm/tucomm.c \
hardware/status_led/status_led.c \
hardware/step_motor/step_motor.c \
hardware/servo/servo.c \
hardware/limit/limit.c \
system/delay/delay.c \
system/usart1/usart1.c \
FreeRTOS/src/croutine.c \
FreeRTOS/src/event_groups.c \
FreeRTOS/src/list.c \
FreeRTOS/src/queue.c \
FreeRTOS/src/stream_buffer.c \
FreeRTOS/src/tasks.c \
FreeRTOS/src/timers.c \
FreeRTOS/port/GCC/ARM_CM4F/port.c \
FreeRTOS/port/MemMang/heap_4.c \
libraries/STM32F4xx_StdPeriph_Driver/src/misc.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_tdes.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dbgmcu.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma2d.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash_ramfunc.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_ltdc.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_pwr.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rng.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c \
libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c \
libraries/Device/src/system_stm32f4xx.c  

# ASM sources
ASM_SOURCES =  \
libraries/Device/startup_stm32f407xx.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_STDPERIPH_DRIVER \
-DSTM32F40_41xxx


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-Ilibraries/CMSIS/inc \
-Ilibraries/Device/inc \
-Ilibraries/STM32F4xx_StdPeriph_Driver/inc \
-IFreeRTOS/port/GCC/ARM_CM4F \
-IFreeRTOS/inc \
-IFreeRTOS \
-Isystem \
-Isystem/delay \
-Isystem/usart1 \
-Isoftware \
-Iuser \
-Ihardware/status_led \
-Ihardware/step_motor \
-Ihardware/servo \
-Ihardware/limit \
-Isoftware/tucomm


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F407ZGTx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections
LDFLAGS += -lc -lrdimon -u _printf_float

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

#######################################
# download
#######################################
download:
	openocd -f ./debug/stlink-v2.cfg \
	        -f ./debug/stm32f4x.cfg \
			-c init -c halt \
			-c "flash write_image erase ./build/project-template.bin 0x08000000" \
			-c reset -c shutdown

# *** EOF ***